import requests, wikipedia, telebot
from telebot import types
from datetime import datetime
from deep_translator import GoogleTranslator
city_flag = False
wiki_flag = False


def bank(data):
    db = data.json()
    keys = db['Valute'].keys()
    temp = ''
    for key in keys:
        val, pre_cost, coast = key, round(db['Valute'][key]['Previous'], 2), round(db['Valute'][key]['Value'], 2)
        if val in ('EUR','USD'):
            temp += f'üü¢{val} {pre_cost}‚Üí{coast}' + '\n'
        else:
            temp += f'üîπ{val} {pre_cost}‚Üí{coast}' + '\n'
    return temp


def get_weather(city):
    city_ru = GoogleTranslator(source='ru', target='en').translate(city)
    params = {'appid': api_key, 'q': city_ru}
    r_weather = requests.get('https://api.openweathermap.org/data/2.5/weather', params=params)
    d = r_weather.json()
    Co = round(d['main']['temp'] - 273.15)
    Co_human = round(d['main']['feels_like'] - 273.15)
    humidity = str(d['main']['humidity'])
    pressure = str(d['main']['pressure'])
    wind = d['wind']['speed']
    sunrise = d['sys']['sunrise']
    sunset = d['sys']['sunset']
    weather = d['weather'][0]['description']
    weather_ru = GoogleTranslator(source='en', target='ru').translate(weather)
    sunrise = datetime.fromtimestamp(sunrise).time()
    sunset = datetime.fromtimestamp(sunset).time()
    return f'''
    üåê–ì–æ—Ä–æ–¥ {city}
    üß≠{weather_ru.capitalize()}
    üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {Co}¬∞C
    üå°–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {Co_human}¬∞C
    üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å {humidity}%
    üí¢–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ {pressure}–≥–ü–∞
    üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind}–º/—Å
    üåÖ–í—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ {sunrise}
    üåÑ–í—Ä–µ–º—è –∑–∞–∫–∞—Ç–∞ {sunset}'''


def get_wiki(word):
    try:
        wikipedia.set_lang("ru")
        page = wikipedia.page(word)
        s = page.content[:1000]
        text = s.split('.')[:3]
        return '.'.join(text)+'.'
    except Exception as error:
        return '–°–ø—Ä–æ—Å–∏ —á—Ç–æ-–Ω–∏–±—É—Ç—å –¥—Ä—É–≥–æ–µ'


token = "5286329173:AAHsGXkLDZLVS-rLXdSvu7HdoKzlK8ieI3Q"
api_key = "b847bd80878220877cd07bce3b091fcd"
r_bank = requests.get('https://www.cbr-xml-daily.ru/daily_json.js')

bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup()
    item1 = types.KeyboardButton('/button')
    item2 = types.KeyboardButton('/help')
    markup.row(item1)
    markup.row(item2)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç', reply_markup=markup)


@bot.message_handler(commands=['help'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup()
    item = types.KeyboardButton('/button')
    markup.row(item)
    bot.send_message(message.chat.id, '''–°–µ–π—á–∞—Å...\n/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n/button - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n/help - –ü–æ–º–æ—â—å
    
                                      ''', reply_markup=markup)

@bot.message_handler(commands=['button'])
def button_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–í–∞–ª—é—Ç—ã")
    item2 = types.KeyboardButton("–ü–æ–≥–æ–¥–∞ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ")
    item3 = types.KeyboardButton("–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–ª–æ–≤ –∏–∑ –≤–∏–∫–∏–ø–µ–¥–∏–∏")
    markup.add(item1)
    markup.add(item2)
    markup.add(item3)
    bot.send_message(message.chat.id, '–ù–µ –≤–æ–ø—Ä–æ—Å', reply_markup=markup)


@bot.message_handler(content_types='text')
def message_reply(message):
    global city_flag
    global wiki_flag
    if message.text == "–í–∞–ª—é—Ç—ã":
        answer = bank(r_bank)
        bot.send_message(message.chat.id, answer)

    elif message.text == "–ü–æ–≥–æ–¥–∞ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ":
        bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ?')
        city_flag = True

    elif message.text == "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–ª–æ–≤ –∏–∑ –≤–∏–∫–∏–ø–µ–¥–∏–∏":
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ')
        wiki_flag = True

    elif city_flag:
        answer = get_weather(message.text)
        bot.send_message(message.chat.id, answer)
        city_flag = False

    elif wiki_flag:
        answer = get_wiki(message.text)
        bot.send_message(message.chat.id, answer)
        wiki_flag = False
    else:
        bot.reply_to(message, "–ß—Ç–æ?")
        pass


bot.infinity_polling()
